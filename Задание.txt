Задача 0
Разработать консольное приложение, которое выводит прогноз погоды по списку городов, заданных пользователем. Пользователь задает один или несколько городов, программа лезет на какой-нибудь погодный сайт или сервис и выводит на экран для каждого города температуру воздуха (можно по желанию еще какую-нибудь доп. информацию).
Пути к решению задачи два:
1. Лезть на сайт и парсить HTML страницу
2. Найти какой-нибудь веб-сервис и интегрировать его в проект, после чего пользоваться им.
Задача 0.1. Модифицировать задачу 0, чтобы загрузка информации работала параллельно. То есть, если я укажу 100 городов, программа загрузит параллельно 100 прогнозов погоды. При этом я хочу получить упорядоченный вывод всей информации сразу по окончанию всех загрузок. Для реализации использовать механизм async/await.
Задача 1
Разработать веб-портал (на движке ASP.NET MVC) для онлайн-торговли игровыми шмотками. У каждой шмотки есть название, изображение, цена и владелец. На портале есть пользователи, у каждого есть какая-то сумма на счету и набор шмоток. По своему желанию пользователи выкидывают на онлайн-рынок какие-то шмотки, другие пользователи по желанию и при наличии денег на счету могут купить эти шмотки себе.
Этапы:
1. Создать главную страницу на которой будет изображен макет рынка (то есть некий список товаров с картинками, заглушка, которая будет заменена на настоящий список в будущем, но уже сейчас должна выглядеть нормально)
2. Разработать базу данных и механизм доступа к ней (можно использовать Entity Framework или ADO.NET на выбор)
3. Реализовать на странице с рынком настоящую информацию из базы данных.
4. Прикрутить пользователей и авторизацию, каждый пользователь может залогиниться под собой, и разлогиниться.
5. Прикрутить личный кабинет пользователя, где он может увидеть свои шмотки, деньги на счету, и может выставить что-то свое на продажу или снять это с продажи.
6. Прикрутить регистрацию новых пользователей аналогично другим интернет-порталам.
7. Прикрутить админку, где пользователь со специальными правами может удалять пользователей, создавать новые шмотки, корректировать деньги на счету пользователей.
8. Украсить портал красивым дизайном, запилить логотип и единый цветовой стиль.
9. Найти бесплатный хостинг для APS.NET MVC проекта, опубликовать портал туда, чтобы он был доступен через интернет любому.